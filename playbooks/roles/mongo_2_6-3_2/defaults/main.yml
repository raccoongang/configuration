mongo_logappend: true
mongo_logrotate: reopen
mongo_version: 3.2.22
mongo_port: "27017"
mongo_extra_conf: ''
mongo_key_file: '/etc/mongodb_key'
mongo_repl_set: rs0
mongo_cluster_members: []
pymongo_version: 3.2.2

mongo_data_dir: "{{ COMMON_DATA_DIR }}/mongo"
mongo_log_dir: "{{ COMMON_LOG_DIR }}/mongo"
mongo_journal_dir: "{{ COMMON_DATA_DIR }}/mongo/mongodb/journal"
mongo_user: mongodb

MONGODB_REPO: "deb http://repo.mongodb.org/apt/ubuntu {{ ansible_distribution_release }}/mongodb-org/3.2 multiverse"
MONGODB_APT_KEY: "https://www.mongodb.org/static/pgp/server-3.2.asc"

mongodb_debian_pkgs:
  - "mongodb-org={{ mongo_version }}"
  - "mongodb-org-server={{ mongo_version }}"
  - "mongodb-org-shell={{ mongo_version }}"
  - "mongodb-org-mongos={{ mongo_version }}"
  - "mongodb-org-tools={{ mongo_version }}"

MONGO_AUTH: true

# Vars Meant to be overridden
MONGO_ADMIN_USER: 'admin'
MONGO_ADMIN_PASSWORD: 'password'
MONGO_USERS:
  - user: cs_comments_service
    password: password
    database: cs_comments_service
    roles: readWrite
  - user: edxapp
    password: password
    database: edxapp
    roles: readWrite
  - user: edxapp
    password: password
    database: xlog
    roles: readWrite

MONGO_CLUSTERED: false
MONGO_CLUSTER_KEY: 'CHANGE+ME+Ewisia9ahgise5bi4hojucahveephoos'
MONGO_BIND_IP: 127.0.0.1

MONGO_USE_SMALLFILES: true

# Storage engine options in 3.2: "mmapv1" or "wiredTiger"
# 3.2 and 3.4 default to wiredTiger
MONGO_DEFAULT_STORAGE_ENGINE: "wiredTiger"

# WiredTiger takes a number of optional configuration settings
# which can be defined as a yaml structure in your secure configuration.
MONGO_STORAGE_ENGINE_OPTIONS: !!null

##

mongo_logpath: "{{ mongo_log_dir }}/mongodb.log"
mongo_dbpath: "{{ mongo_data_dir }}/mongodb"

# If the system is running out of an Amazon Web Services
# cloudformation stack, this group name can used to pull out
# the name of the stack the mongo server resides in.
mongo_aws_stack_name: "tag_aws_cloudformation_stack-name_"

# In environments that do not require durability (devstack / Jenkins)
# you can disable the journal to reduce disk usage
mongo_enable_journal: True

# We can do regular backups of MongoDB to S3.
MONGO_S3_BACKUP: false
# backup cron time:
MONGO_S3_BACKUP_HOUR: "*/12"
MONGO_S3_BACKUP_DAY: "*"
# override with a secondary node that will perform backups
MONGO_S3_BACKUP_NODE: "undefined"
# back up data into a specific S3 bucket
MONGO_S3_BACKUP_BUCKET: "undefined"
# temporary directory mongodump will use to store data
MONGO_S3_BACKUP_TEMPDIR: "{{ mongo_data_dir }}"
MONGO_S3_NOTIFY_EMAIL: "dummy@example.com"
mongo_s3_logfile: "{{ COMMON_LOG_DIR }}/mongo/s3-mongo-backup.log"
MONGO_S3_S3CMD_CONFIG: "{{ COMMON_DATA_DIR }}/mongo-s3-backup.s3cfg"
MONGO_S3_BACKUP_AWS_ACCESS_KEY: !!null
MONGO_S3_BACKUP_AWS_SECRET_KEY: !!null
