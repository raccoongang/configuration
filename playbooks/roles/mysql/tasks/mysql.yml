---
# Here are the few steps that I have performed to get the `debconf` setting information:
#
# - downloaded the mysql-apt-repo from the mysql official site(named: mysql-apt-config_0.6.0-1_all.deb)
# - Find the `debconf` setting information after installing this `deb` package
#
# # debconf-show mysql-apt-config
# * mysql-apt-config/select-server: mysql-5.6
#   mysql-apt-config/unsupported-platform: abort
#   mysql-apt-config/repo-codename: precise
# * mysql-apt-config/select-product: Apply
#   mysql-apt-config/select-tools:
#   mysql-apt-config/repo-distro: ubuntu
#
# - Even to get more information about the `debconf` options of the package:
#
# # debconf-get-selections|grep mysql-apt-config
# mysql-apt-config  mysql-apt-config/select-server  select  mysql-5.6
# mysql-apt-config  mysql-apt-config/unsupported-platform select  abort
# mysql-apt-config  mysql-apt-config/repo-codename  select  precise
# mysql-apt-config  mysql-apt-config/select-product select  Apply
# mysql-apt-config  mysql-apt-config/select-tools select
# mysql-apt-config  mysql-apt-config/repo-distro  select  ubuntu
#
# - After the installation, I have checked the `/etc/apt/sources.list.d` directory and found one file `mysql.list`
# with following contents:
#
# deb http://repo.mysql.com/apt/ubuntu/ precise mysql-apt-config
# deb http://repo.mysql.com/apt/ubuntu/ precise mysql-5.6
# deb-src http://repo.mysql.com/apt/ubuntu/ precise mysql-5.6
#
#
# Thought that instead of performing all those steps and get the repo, why not directly use this repo
# `deb http://repo.mysql.com/apt/ubuntu/ precise mysql-5.6`, I just picked this line and directly used it and it worked for us.

- name: Install mysql-5.6 and dependencies
  apt:
    name: "{{ item }}"
    install_recommends: yes
    state: present
  with_items: "{{ mysql_debian_pkgs }}"

- name: Move mysql datadir to edx partition
  stat:
    path: /var/lib/mysql
  register: datadir
  when: MYSQL_DATADIR != "/var/lib/mysql"

- name: Move. Stop mysql service
  service:
    name: mysql
    state: stopped
  when:
    - not datadir.stat.islnk
    - MYSQL_DATADIR != "/var/lib/mysql"

- name: Move /var/lib/mysql to new location and symlinking
  shell: "mv /var/lib/mysql {{ MYSQL_DATADIR }} ; ln -s {{ MYSQL_DATADIR }} /var/lib/mysql"
  when:
    - not datadir.stat.islnk
    - MYSQL_DATADIR != "/var/lib/mysql"

- name: Deploy mysqld.cnf
  template:
    src: mysqld.cnf.j2
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
  register: mysqld_conf

- name: Patch apparmor mysqld restrictions
  replace:
    path: /etc/apparmor.d/usr.sbin.mysqld
    regexp: '^(.*)/var/lib/mysql(.*)$'
    replace: '\1{{ MYSQL_DATADIR }}\2'
  register: apparmor_mysqld

- name: Reload apparmor service
  service:
    name: apparmor
    state: reloaded
  when: apparmor_mysqld.changed

- name: Restart mysql service
  service:
    name: mysql
    state: restarted
  when: mysqld_conf.changed

- name: Enable mysql service
  service:
    name: mysql
    state: started
    enabled: yes

- name: Set root password
  mysql_user:
    name: 'root'
    login_host: localhost
    password: "{{ COMMON_MYSQL_ADMIN_PASS }}"
    host: "{{ item }}"
  ignore_errors: True
  with_items:
    - "{{ ansible_hostname }}"
    - "{{ COMMON_HOSTNAME | default(omit) }}"
    - "%"
    - "::1"
    - 127.0.0.1
    - localhost

- name: Create /root/.my.cnf
  copy:
    dest: /root/.my.cnf
    owner: root
    mode: 0600
    content: |
      [client]
      user = {{ COMMON_MYSQL_ADMIN_USER }}
      password = {{ COMMON_MYSQL_ADMIN_PASS }}

- name: Ensure Anonymous user(s) does not exist
  mysql_user:
    name: ''
    host: "{{ item }}"
    state: absent
    login_user: root
    login_password: "{{ COMMON_MYSQL_ADMIN_PASS }}"
  with_items:
    - "{{ ansible_hostname }}"
    - "{{ COMMON_HOSTNAME | default(omit) }}"
    - "%"
    - "::1"
    - 127.0.0.1
    - localhost

- name: setup the admin db user
  mysql_user:
    name: "{{ COMMON_MYSQL_ADMIN_USER }}"
    password: "{{ COMMON_MYSQL_ADMIN_PASS }}"
    priv: "*.*:ALL,GRANT"
    host: "{{ item }}"
    login_user: root
    login_password: "{{ COMMON_MYSQL_ADMIN_PASS }}"
  with_items:
    - localhost
    - "%"
