#!/bin/bash

# This file was generated by Ansible for {{ ansible_fqdn }}
# Do NOT modify this file by hand!

WORKDIR="{{ backup_work }}/{{ item[0]['name'] }}"

mkdir -p "${WORKDIR}"
chmod og-wrx "${WORKDIR}"

PGDUMP="pg_dump"
HOST="{{ item[0]['pg_host'] | default('', true) }}"
USER="{{ item[0]['pg_user'] | default('', true) }}"
PASS="{{ item[0]['pg_password'] | default('', true) }}"
DATABASES="{{ item[0]['pg_databases'] | default([], true) | join(' ') }}"

if [ ! -z ${HOST} ]; then HOST="--host=${HOST}" ; else PGDUMP="sudo -u postgres pg_dump"; fi
if [ ! -z ${USER} ]; then USER="--username=${USER}" ; fi
if [ ! -z ${PASS} ]; then PGPASSWORD="${PASS}" ; export PGPASSWORD; fi

if [ -z "${DATABASES}" ]; then
    ${PGDUMP} -c ${USER} ${HOST} --file="${WORKDIR}"/dump
    DUMP_RETCODE=$?
else
    for db in ${DATABASES}; do
        ${PGDUMP} -c ${USER} ${HOST} --dbname=${db} --file="${WORKDIR}"/dump
        DUMP_RETCODE=`expr 0${DUMP_RETCODE} + ${RETCODE}`
    done
fi

{% for action in item[0]['pre_actions']|default([]) %}
{{ action }}
{% endfor %}

if test ${DUMP_RETCODE} -ne 0 ; then
    echo "Errors: pg_dump finished with errors. Please investigate"
    exit 1
fi
