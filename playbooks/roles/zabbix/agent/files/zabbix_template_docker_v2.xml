<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>3.4</version>
    <date>2018-11-10T15:33:05Z</date>
    <groups>
        <group>
            <name>Templates</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Active Template App Docker v2</template>
            <name>Active Template App Docker v2</name>
            <description>You need to add names of monitored containers to Macros section&#13;
of Host.&#13;
You can use macro names from {$CONTAINER_NAME1} to {$CONTAINER_NAME9}</description>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Docker</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Docker status collector for {$CONTAINER_NAME1}</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.collector[{$CONTAINER_NAME1}]</key>
                    <delay>2m</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Return overall info for all containers</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>Docker status collector for {$CONTAINER_NAME2}</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.collector[{$CONTAINER_NAME2}]</key>
                    <delay>2m</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Return overall info for all containers</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>Docker status collector for {$CONTAINER_NAME3}</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.collector[{$CONTAINER_NAME3}]</key>
                    <delay>2m</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Return overall info for all containers</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>Docker status collector for {$CONTAINER_NAME4}</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.collector[{$CONTAINER_NAME4}]</key>
                    <delay>2m</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Return overall info for all containers</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>Docker status collector for {$CONTAINER_NAME5}</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.collector[{$CONTAINER_NAME5}]</key>
                    <delay>2m</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Return overall info for all containers</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>Docker status collector for {$CONTAINER_NAME6}</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.collector[{$CONTAINER_NAME6}]</key>
                    <delay>2m</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Return overall info for all containers</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>Docker status collector for {$CONTAINER_NAME7}</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.collector[{$CONTAINER_NAME7}]</key>
                    <delay>2m</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Return overall info for all containers</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>Docker status collector for {$CONTAINER_NAME8}</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.collector[{$CONTAINER_NAME8}]</key>
                    <delay>2m</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Return overall info for all containers</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>Docker status collector for {$CONTAINER_NAME9}</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.collector[{$CONTAINER_NAME9}]</key>
                    <delay>2m</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Return overall info for all containers</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME1} disk usage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.diskusage[{$CONTAINER_NAME1}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME1}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME2} disk usage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.diskusage[{$CONTAINER_NAME2}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME2}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME3} disk usage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.diskusage[{$CONTAINER_NAME3}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME3}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME4} disk usage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.diskusage[{$CONTAINER_NAME4}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME4}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME5} disk usage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.diskusage[{$CONTAINER_NAME5}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME5}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME6} disk usage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.diskusage[{$CONTAINER_NAME6}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME6}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME7} disk usage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.diskusage[{$CONTAINER_NAME7}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME7}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME8} disk usage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.diskusage[{$CONTAINER_NAME8}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME8}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME9} disk usage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.diskusage[{$CONTAINER_NAME9}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME9}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME1} memory fail counter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memfailcnt[{$CONTAINER_NAME1}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memfailcnt:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME1}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME2} memory fail counter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memfailcnt[{$CONTAINER_NAME2}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memfailcnt:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME2}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME3} memory fail counter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memfailcnt[{$CONTAINER_NAME3}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memfailcnt:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME3}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME4} memory fail counter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memfailcnt[{$CONTAINER_NAME4}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memfailcnt:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME4}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME5} memory fail counter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memfailcnt[{$CONTAINER_NAME5}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memfailcnt:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME5}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME6} memory fail counter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memfailcnt[{$CONTAINER_NAME6}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memfailcnt:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME6}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME7} memory fail counter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memfailcnt[{$CONTAINER_NAME7}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memfailcnt:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME7}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME8} memory fail counter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memfailcnt[{$CONTAINER_NAME8}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memfailcnt:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME8}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME9} memory fail counter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memfailcnt[{$CONTAINER_NAME9}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memfailcnt:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME9}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME1} memory limit</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memlimit[{$CONTAINER_NAME1}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memlimit:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME1}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME2} memory limit</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memlimit[{$CONTAINER_NAME2}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memlimit:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME2}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME3} memory limit</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memlimit[{$CONTAINER_NAME3}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memlimit:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME3}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME4} memory limit</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memlimit[{$CONTAINER_NAME4}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memlimit:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME4}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME5} memory limit</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memlimit[{$CONTAINER_NAME5}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memlimit:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME5}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME6} memory limit</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memlimit[{$CONTAINER_NAME6}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memlimit:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME6}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME7} memory limit</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memlimit[{$CONTAINER_NAME7}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memlimit:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME7}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME8} memory limit</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memlimit[{$CONTAINER_NAME8}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memlimit:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME8}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME9} memory limit</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memlimit[{$CONTAINER_NAME9}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memlimit:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME9}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME1} memory usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.mempercentage[{$CONTAINER_NAME1}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memusedpercent:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME1}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME2} memory usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.mempercentage[{$CONTAINER_NAME2}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memusedpercent:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME2}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME3} memory usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.mempercentage[{$CONTAINER_NAME3}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memusedpercent:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME3}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME4} memory usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.mempercentage[{$CONTAINER_NAME4}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memusedpercent:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME4}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME5} memory usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.mempercentage[{$CONTAINER_NAME5}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memusedpercent:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME5}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME6} memory usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.mempercentage[{$CONTAINER_NAME6}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memusedpercent:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME6}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME7} memory usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.mempercentage[{$CONTAINER_NAME7}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memusedpercent:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME7}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME8} memory usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.mempercentage[{$CONTAINER_NAME8}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memusedpercent:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME8}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME9} memory usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.mempercentage[{$CONTAINER_NAME9}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memusedpercent:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME9}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME1} memory usage bytes</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memusage[{$CONTAINER_NAME1}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memused:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME1}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME2} memory usage bytes</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memusage[{$CONTAINER_NAME2}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memused:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME2}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME3} memory usage bytes</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memusage[{$CONTAINER_NAME3}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memused:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME3}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME4} memory usage bytes</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memusage[{$CONTAINER_NAME4}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memused:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME4}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME5} memory usage bytes</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memusage[{$CONTAINER_NAME5}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memused:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME5}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME6} memory usage bytes</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memusage[{$CONTAINER_NAME6}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memused:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME6}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME7} memory usage bytes</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memusage[{$CONTAINER_NAME7}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memused:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME7}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME8} memory usage bytes</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memusage[{$CONTAINER_NAME8}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memused:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME8}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME9} memory usage bytes</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.memusage[{$CONTAINER_NAME9}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>memused:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME9}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME1} net bytes in</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netin[{$CONTAINER_NAME1}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netin:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME1}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME2} net bytes in</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netin[{$CONTAINER_NAME2}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netin:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME2}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME3} net bytes in</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netin[{$CONTAINER_NAME3}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netin:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME3}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME4} net bytes in</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netin[{$CONTAINER_NAME4}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netin:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME4}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME5} net bytes in</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netin[{$CONTAINER_NAME5}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netin:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME5}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME6} net bytes in</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netin[{$CONTAINER_NAME6}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netin:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME6}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME7} net bytes in</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netin[{$CONTAINER_NAME7}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netin:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME7}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME8} net bytes in</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netin[{$CONTAINER_NAME8}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netin:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME8}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME9} net bytes in</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netin[{$CONTAINER_NAME9}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netin:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME9}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME1} net bytes out</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netout[{$CONTAINER_NAME1}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netout:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME1}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME2} net bytes out</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netout[{$CONTAINER_NAME2}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netout:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME2}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME3} net bytes out</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netout[{$CONTAINER_NAME3}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netout:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME3}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME4} net bytes out</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netout[{$CONTAINER_NAME4}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netout:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME4}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME5} net bytes out</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netout[{$CONTAINER_NAME5}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netout:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME5}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME6} net bytes out</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netout[{$CONTAINER_NAME6}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netout:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME6}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME7} net bytes out</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netout[{$CONTAINER_NAME7}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netout:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME7}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME8} net bytes out</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netout[{$CONTAINER_NAME8}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netout:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME8}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME9} net bytes out</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.netout[{$CONTAINER_NAME9}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>bits</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>netout:([0-9]+)
\1</params>
                        </step>
                        <step>
                            <type>10</type>
                            <params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>8</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME9}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME1} status</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.status[{$CONTAINER_NAME1}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>1</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>status:(\w+)\s
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME1}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME2} status</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.status[{$CONTAINER_NAME2}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>1</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>status:(\w+)\s
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME2}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME3} status</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.status[{$CONTAINER_NAME3}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>1</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>status:(\w+)\s
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME3}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME4} status</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.status[{$CONTAINER_NAME4}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>1</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>status:(\w+)\s
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME4}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME5} status</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.status[{$CONTAINER_NAME5}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>1</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>status:(\w+)\s
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME5}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME6} status</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.status[{$CONTAINER_NAME6}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>1</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>status:(\w+)\s
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME6}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME7} status</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.status[{$CONTAINER_NAME7}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>1</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>status:(\w+)\s
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME7}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME8} status</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.status[{$CONTAINER_NAME8}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>1</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>status:(\w+)\s
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME8}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME9} status</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker.status[{$CONTAINER_NAME9}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>1</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>status:(\w+)\s
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME9}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME1} CPU usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.cpupercentage[{$CONTAINER_NAME1}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>cpu:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME1}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME2} CPU usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.cpupercentage[{$CONTAINER_NAME2}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>cpu:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME2}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME3} CPU usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.cpupercentage[{$CONTAINER_NAME3}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>cpu:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME3}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME4} CPU usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.cpupercentage[{$CONTAINER_NAME4}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>cpu:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME4}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME5} CPU usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.cpupercentage[{$CONTAINER_NAME5}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>cpu:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME5}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME6} CPU usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.cpupercentage[{$CONTAINER_NAME6}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>cpu:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME6}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME7} CPU usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.cpupercentage[{$CONTAINER_NAME7}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>cpu:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME7}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME8} CPU usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.cpupercentage[{$CONTAINER_NAME8}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>cpu:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME8}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME9} CPU usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.cpupercentage[{$CONTAINER_NAME9}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>percents</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>cpu:([0-9\.]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME9}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME1} disk usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.diskusagepercentage[{$CONTAINER_NAME1}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage_percent:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME1}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME2} disk usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.diskusagepercentage[{$CONTAINER_NAME2}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage_percent:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME2}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME3} disk usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.diskusagepercentage[{$CONTAINER_NAME3}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage_percent:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME3}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME4} disk usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.diskusagepercentage[{$CONTAINER_NAME4}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage_percent:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME4}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME5} disk usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.diskusagepercentage[{$CONTAINER_NAME5}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage_percent:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME5}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME6} disk usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.diskusagepercentage[{$CONTAINER_NAME6}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage_percent:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME6}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME7} disk usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.diskusagepercentage[{$CONTAINER_NAME7}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage_percent:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME7}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME8} disk usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.diskusagepercentage[{$CONTAINER_NAME8}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage_percent:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME8}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker_v2 container {$CONTAINER_NAME9} disk usage percentage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>docker_v2.diskusagepercentage[{$CONTAINER_NAME9}]</key>
                    <delay>0</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Docker</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>5</type>
                            <params>diskusage_percent:([0-9]+)
\1</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item>
                        <key>docker.collector[{$CONTAINER_NAME9}]</key>
                    </master_item>
                </item>
            </items>
            <discovery_rules/>
            <httptests/>
            <macros>
                <macro>
                    <macro>{$CONTAINER_NAME1}</macro>
                    <value>0</value>
                </macro>
                <macro>
                    <macro>{$CONTAINER_NAME2}</macro>
                    <value>0</value>
                </macro>
                <macro>
                    <macro>{$CONTAINER_NAME3}</macro>
                    <value>0</value>
                </macro>
                <macro>
                    <macro>{$CONTAINER_NAME4}</macro>
                    <value>0</value>
                </macro>
                <macro>
                    <macro>{$CONTAINER_NAME5}</macro>
                    <value>0</value>
                </macro>
                <macro>
                    <macro>{$CONTAINER_NAME6}</macro>
                    <value>0</value>
                </macro>
                <macro>
                    <macro>{$CONTAINER_NAME7}</macro>
                    <value>0</value>
                </macro>
                <macro>
                    <macro>{$CONTAINER_NAME8}</macro>
                    <value>0</value>
                </macro>
                <macro>
                    <macro>{$CONTAINER_NAME9}</macro>
                    <value>0</value>
                </macro>
            </macros>
            <templates/>
            <screens/>
        </template>
    </templates>
    <triggers>
        <trigger>
            <expression>{$CONTAINER_NAME1}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].strlen(#2)}&lt;108)</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container metrics for {$CONTAINER_NAME1} is not collected on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME1} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME1}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags/>
        </trigger>
        <trigger>
            <expression>{$CONTAINER_NAME2}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].strlen(#2)}&lt;108)</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container metrics for {$CONTAINER_NAME2} is not collected on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME2} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME2}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags/>
        </trigger>
        <trigger>
            <expression>{$CONTAINER_NAME3}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].strlen(#2)}&lt;108)</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container metrics for {$CONTAINER_NAME3} is not collected on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME3} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME3}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags/>
        </trigger>
        <trigger>
            <expression>{$CONTAINER_NAME4}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].strlen(#2)}&lt;108)</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container metrics for {$CONTAINER_NAME4} is not collected on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME4} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME4}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags/>
        </trigger>
        <trigger>
            <expression>{$CONTAINER_NAME5}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].strlen(#2)}&lt;108)</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container metrics for {$CONTAINER_NAME5} is not collected on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME5} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME5}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags/>
        </trigger>
        <trigger>
            <expression>{$CONTAINER_NAME6}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].strlen(#2)}&lt;108)</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container metrics for {$CONTAINER_NAME6} is not collected on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME6} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME6}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags/>
        </trigger>
        <trigger>
            <expression>{$CONTAINER_NAME7}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].strlen(#2)}&lt;108)</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container metrics for {$CONTAINER_NAME7} is not collected on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME7} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME7}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags/>
        </trigger>
        <trigger>
            <expression>{$CONTAINER_NAME8}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].strlen(#2)}&lt;108)</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container metrics for {$CONTAINER_NAME8} is not collected on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME8} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME8}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags/>
        </trigger>
        <trigger>
            <expression>{$CONTAINER_NAME9}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].strlen(#2)}&lt;108)</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container metrics for {$CONTAINER_NAME9} is not collected on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME9} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME9}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME1}].min(20m)}&gt;20</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME1} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME1} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME1}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME1} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME1}].min(20m)}&gt;40</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME1} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME1}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME1}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME1}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME1} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME1} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME1}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME1} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME1}].min(20m)}&gt;60</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME1} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME1}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME1}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME1}].min(20m)}&gt;60</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME1} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME1} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME1}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME1} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME1}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME1}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.memfailcnt[{$CONTAINER_NAME1}].last()}&lt;&gt;0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME1} has non-zero memory fail counter on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME1} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME1}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME1} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME1}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME1}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME1}].str(running)}=0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME1} is not running on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME1}].min(10m)}&gt;95</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME1} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME1} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME1}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME1} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME1}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME1}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME1}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME1} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME1} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME1}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME1} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME1}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME1} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME1}].min(20m)}&gt;80</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME1}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME1}].min(20m)}&gt;80</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME1} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME1} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME1}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME1} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME1}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME1} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME1}].min(10m)}&gt;95</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME1}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME1}].min(10m)}&gt;100000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME1}].min(10m)}&gt;100000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME1} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME1} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME1}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME1} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME1}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME1} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME1}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME1}].min(10m)}&gt;200000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME1}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME1}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME1}].min(10m)}&gt;200000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME1} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME1} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME1}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME1} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME1}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME1} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME1}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME1}].min(10m)}&gt;400000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME1}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME1}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME1}].min(10m)}&gt;400000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME1} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME1} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME1}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME1}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME1} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME1}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME1}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME2}].min(20m)}&gt;20</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME2} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME2} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME2}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME2} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME2}].min(20m)}&gt;40</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME2} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME2}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME2}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME2}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME2} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME2} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME2}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME2} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME2}].min(20m)}&gt;60</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME2} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME2}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME2}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME2}].min(20m)}&gt;60</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME2} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME2} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME2}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME2} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME2}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME2}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.memfailcnt[{$CONTAINER_NAME2}].last()}&lt;&gt;0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME2} has non-zero memory fail counter on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME2} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME2}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME2} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME2}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME2}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME2}].str(running)}=0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME2} is not running on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME2}].min(10m)}&gt;95</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME2} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME2} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME2}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME2} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME2}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME2}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME2}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME2} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME2} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME2}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME2} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME2}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME2} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME2}].min(20m)}&gt;80</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME2}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME2}].min(20m)}&gt;80</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME2} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME2} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME2}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME2} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME2}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME2} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME2}].min(10m)}&gt;95</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME2}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME2}].min(10m)}&gt;100000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME2}].min(10m)}&gt;100000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME2} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME2} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME2}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME2} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME2}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME2} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME2}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME2}].min(10m)}&gt;200000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME2}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME2}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME2}].min(10m)}&gt;200000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME2} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME2} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME2}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME2} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME2}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME2} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME2}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME2}].min(10m)}&gt;400000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME2}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME2}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME2}].min(10m)}&gt;400000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME2} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME2} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME2}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME2}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME2} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME2}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME2}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME3}].min(20m)}&gt;20</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME3} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME3} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME3}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME3} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME3}].min(20m)}&gt;40</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME3} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME3}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME3}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME3}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME3} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME3} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME3}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME3} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME3}].min(20m)}&gt;60</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME3} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME3}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME3}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME3}].min(20m)}&gt;60</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME3} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME3} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME3}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME3} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME3}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME3}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.memfailcnt[{$CONTAINER_NAME3}].last()}&lt;&gt;0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME3} has non-zero memory fail counter on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME3} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME3}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME3} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME3}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME3}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME3}].str(running)}=0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME3} is not running on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME3}].min(10m)}&gt;95</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME3} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME3} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME3}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME3} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME3}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME3}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME3}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME3} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME3} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME3}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME3} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME3}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME3} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME3}].min(20m)}&gt;80</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME3}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME3}].min(20m)}&gt;80</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME3} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME3} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME3}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME3} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME3}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME3} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME3}].min(10m)}&gt;95</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME3}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME3}].min(10m)}&gt;100000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME3}].min(10m)}&gt;100000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME3} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME3} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME3}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME3} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME3}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME3} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME3}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME3}].min(10m)}&gt;200000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME3}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME3}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME3}].min(10m)}&gt;200000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME3} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME3} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME3}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME3} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME3}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME3} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME3}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME3}].min(10m)}&gt;400000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME3}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME3}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME3}].min(10m)}&gt;400000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME3} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME3} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME3}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME3}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME3} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME3}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME3}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME4}].min(20m)}&gt;20</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME4} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME4} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME4}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME4} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME4}].min(20m)}&gt;40</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME4} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME4}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME4}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME4}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME4} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME4} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME4}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME4} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME4}].min(20m)}&gt;60</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME4} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME4}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME4}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME4}].min(20m)}&gt;60</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME4} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME4} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME4}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME4} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME4}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME4}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.memfailcnt[{$CONTAINER_NAME4}].last()}&lt;&gt;0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME4} has non-zero memory fail counter on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME4} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME4}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME4} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME4}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME4}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME4}].str(running)}=0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME4} is not running on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME4}].min(10m)}&gt;95</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME4} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME4} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME4}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME4} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME4}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME4}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME4}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME4} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME4} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME4}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME4} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME4}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME4} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME4}].min(20m)}&gt;80</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME4}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME4}].min(20m)}&gt;80</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME4} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME4} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME4}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME4} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME4}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME4} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME4}].min(10m)}&gt;95</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME4}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME4}].min(10m)}&gt;100000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME4}].min(10m)}&gt;100000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME4} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME4} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME4}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME4} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME4}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME4} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME4}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME4}].min(10m)}&gt;200000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME4}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME4}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME4}].min(10m)}&gt;200000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME4} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME4} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME4}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME4} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME4}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME4} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME4}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME4}].min(10m)}&gt;400000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME4}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME4}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME4}].min(10m)}&gt;400000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME4} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME4} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME4}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME4}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME4} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME4}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME4}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME5}].min(20m)}&gt;20</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME5} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME5} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME5}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME5} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME5}].min(20m)}&gt;40</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME5} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME5}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME5}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME5}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME5} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME5} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME5}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME5} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME5}].min(20m)}&gt;60</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME5} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME5}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME5}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME5}].min(20m)}&gt;60</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME5} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME5} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME5}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME5} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME5}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME5}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.memfailcnt[{$CONTAINER_NAME5}].last()}&lt;&gt;0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME5} has non-zero memory fail counter on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME5} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME5}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME5} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME5}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME5}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME5}].str(running)}=0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME5} is not running on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME5}].min(10m)}&gt;95</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME5} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME5} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME5}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME5} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME5}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME5}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME5}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME5} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME5} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME5}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME5} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME5}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME5} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME5}].min(20m)}&gt;80</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME5}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME5}].min(20m)}&gt;80</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME5} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME5} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME5}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME5} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME5}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME5} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME5}].min(10m)}&gt;95</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME5}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME5}].min(10m)}&gt;100000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME5}].min(10m)}&gt;100000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME5} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME5} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME5}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME5} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME5}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME5} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME5}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME5}].min(10m)}&gt;200000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME5}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME5}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME5}].min(10m)}&gt;200000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME5} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME5} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME5}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME5} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME5}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME5} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME5}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME5}].min(10m)}&gt;400000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME5}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME5}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME5}].min(10m)}&gt;400000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME5} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME5} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME5}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME5}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME5} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME5}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME5}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME6}].min(20m)}&gt;20</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME6} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME6} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME6}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME6} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME6}].min(20m)}&gt;40</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME6} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME6}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME6}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME6}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME6} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME6} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME6}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME6} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME6}].min(20m)}&gt;60</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME6} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME6}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME6}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME6}].min(20m)}&gt;60</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME6} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME6} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME6}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME6} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME6}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME6}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.memfailcnt[{$CONTAINER_NAME6}].last()}&lt;&gt;0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME6} has non-zero memory fail counter on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME6} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME6}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME6} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME6}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME6}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME6}].str(running)}=0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME6} is not running on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME6}].min(10m)}&gt;95</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME6} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME6} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME6}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME6} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME6}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME6}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME6}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME6} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME6} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME6}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME6} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME6}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME6} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME6}].min(20m)}&gt;80</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME6}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME6}].min(20m)}&gt;80</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME6} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME6} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME6}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME6} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME6}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME6} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME6}].min(10m)}&gt;95</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME6}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME6}].min(10m)}&gt;100000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME6}].min(10m)}&gt;100000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME6} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME6} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME6}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME6} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME6}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME6} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME6}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME6}].min(10m)}&gt;200000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME6}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME6}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME6}].min(10m)}&gt;200000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME6} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME6} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME6}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME6} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME6}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME6} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME6}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME6}].min(10m)}&gt;400000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME6}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME6}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME6}].min(10m)}&gt;400000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME6} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME6} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME6}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME6}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME6} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME6}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME6}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME7}].min(20m)}&gt;20</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME7} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME7} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME7}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME7} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME7}].min(20m)}&gt;40</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME7} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME7}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME7}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME7}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME7} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME7} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME7}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME7} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME7}].min(20m)}&gt;60</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME7} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME7}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME7}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME7}].min(20m)}&gt;60</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME7} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME7} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME7}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME7} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME7}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME7}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.memfailcnt[{$CONTAINER_NAME7}].last()}&lt;&gt;0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME7} has non-zero memory fail counter on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME7} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME7}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME7} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME7}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME7}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME7}].str(running)}=0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME7} is not running on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME7}].min(10m)}&gt;95</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME7} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME7} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME7}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME7} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME7}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME7}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME7}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME7} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME7} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME7}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME7} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME7}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME7} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME7}].min(20m)}&gt;80</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME7}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME7}].min(20m)}&gt;80</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME7} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME7} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME7}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME7} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME7}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME7} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME7}].min(10m)}&gt;95</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME7}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME7}].min(10m)}&gt;100000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME7}].min(10m)}&gt;100000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME7} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME7} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME7}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME7} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME7}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME7} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME7}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME7}].min(10m)}&gt;200000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME7}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME7}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME7}].min(10m)}&gt;200000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME7} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME7} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME7}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME7} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME7}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME7} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME7}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME7}].min(10m)}&gt;400000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME7}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME7}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME7}].min(10m)}&gt;400000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME7} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME7} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME7}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME7}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME7} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME7}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME7}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME8}].min(20m)}&gt;20</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME8} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME8} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME8}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME8} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME8}].min(20m)}&gt;40</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME8} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME8}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME8}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME8}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME8} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME8} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME8}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME8} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME8}].min(20m)}&gt;60</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME8} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME8}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME8}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME8}].min(20m)}&gt;60</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME8} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME8} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME8}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME8} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME8}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME8}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.memfailcnt[{$CONTAINER_NAME8}].last()}&lt;&gt;0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME8} has non-zero memory fail counter on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME8} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME8}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME8} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME8}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME8}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME8}].str(running)}=0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME8} is not running on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME8}].min(10m)}&gt;95</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME8} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME8} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME8}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME8} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME8}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME8}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME8}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME8} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME8} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME8}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME8} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME8}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME8} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME8}].min(20m)}&gt;80</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME8}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME8}].min(20m)}&gt;80</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME8} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME8} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME8}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME8} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME8}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME8} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME8}].min(10m)}&gt;95</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME8}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME8}].min(10m)}&gt;100000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME8}].min(10m)}&gt;100000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME8} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME8} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME8}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME8} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME8}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME8} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME8}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME8}].min(10m)}&gt;200000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME8}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME8}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME8}].min(10m)}&gt;200000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME8} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME8} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME8}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME8} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME8}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME8} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME8}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME8}].min(10m)}&gt;400000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME8}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME8}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME8}].min(10m)}&gt;400000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME8} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME8} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME8}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME8}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME8} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME8}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME8}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME9}].min(20m)}&gt;20</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME9} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME9} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME9}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME9} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME9}].min(20m)}&gt;40</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME9} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME9}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME9}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME9}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME9} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME9} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME9}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME9} CPU usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME9}].min(20m)}&gt;60</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME9} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME9}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME9}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker_v2.cpupercentage[{$CONTAINER_NAME9}].min(20m)}&gt;60</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME9} CPU usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME9} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME9}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME9} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME9}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME9}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.memfailcnt[{$CONTAINER_NAME9}].last()}&lt;&gt;0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME9} has non-zero memory fail counter on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME9} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME9}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME9} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME9}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME9}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME9}].str(running)}=0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME9} is not running on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME9}].min(10m)}&gt;95</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME9} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME9} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME9}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME9} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME9}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME9}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME9}].min(20m)}&gt;40</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME9} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME9} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME9}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME9} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME9}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME9} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME9}].min(20m)}&gt;80</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME9}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME9}].min(20m)}&gt;80</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME9} memory usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME9} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME9}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME9} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME9}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME9} memory usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.mempercentage[{$CONTAINER_NAME9}].min(10m)}&gt;95</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME9}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME9}].min(10m)}&gt;100000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME9}].min(10m)}&gt;100000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME9} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME9} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME9}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME9} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME9}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME9} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME9}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME9}].min(10m)}&gt;200000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME9}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME9}].min(10m)}&gt;200000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME9}].min(10m)}&gt;200000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME9} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME9} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME9}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME9} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME9}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME9} network usage is too high on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME9}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME9}].min(10m)}&gt;400000000</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME9}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <expression>{Active Template App Docker v2:docker.netin[{$CONTAINER_NAME9}].min(10m)}&gt;400000000 or {Active Template App Docker v2:docker.netout[{$CONTAINER_NAME9}].min(10m)}&gt;400000000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>Docker container {$CONTAINER_NAME9} network usage is too high on {HOST.NAME}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies>
                <dependency>
                    <name>Docker container metrics for {$CONTAINER_NAME9} is not collected on {HOST.NAME}</name>
                    <expression>{$CONTAINER_NAME9}&lt;&gt;0 and ({Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].nodata(20m)}=1 or {Active Template App Docker v2:docker.collector[{$CONTAINER_NAME9}].strlen(#2)}&lt;108)</expression>
                    <recovery_expression/>
                </dependency>
                <dependency>
                    <name>Docker container {$CONTAINER_NAME9} is not running on {HOST.NAME}</name>
                    <expression>{Active Template App Docker v2:docker.status[{$CONTAINER_NAME9}].str(running)}=0</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>docer_container</tag>
                    <value>${CONTAINER_NAME9}</value>
                </tag>
                <tag>
                    <tag>docker</tag>
                    <value>yes</value>
                </tag>
            </tags>
        </trigger>
    </triggers>
    <graphs>
        <graph>
            <name>Docker containers CPU usage percentage</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>100.0000</yaxismax>
            <show_work_period>1</show_work_period>
            <show_triggers>1</show_triggers>
            <type>0</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>1A7C11</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker_v2.cpupercentage[{$CONTAINER_NAME1}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>F63100</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker_v2.cpupercentage[{$CONTAINER_NAME2}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>0</drawtype>
                    <color>2774A4</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker_v2.cpupercentage[{$CONTAINER_NAME3}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <drawtype>0</drawtype>
                    <color>A54F10</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker_v2.cpupercentage[{$CONTAINER_NAME4}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <drawtype>0</drawtype>
                    <color>FC6EA3</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker_v2.cpupercentage[{$CONTAINER_NAME5}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <drawtype>0</drawtype>
                    <color>6C59DC</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker_v2.cpupercentage[{$CONTAINER_NAME6}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>6</sortorder>
                    <drawtype>0</drawtype>
                    <color>AC8C14</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker_v2.cpupercentage[{$CONTAINER_NAME7}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>7</sortorder>
                    <drawtype>0</drawtype>
                    <color>611F27</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker_v2.cpupercentage[{$CONTAINER_NAME8}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>8</sortorder>
                    <drawtype>0</drawtype>
                    <color>F230E0</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker_v2.cpupercentage[{$CONTAINER_NAME9}]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker containers disk usage</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>100.0000</yaxismax>
            <show_work_period>1</show_work_period>
            <show_triggers>1</show_triggers>
            <type>0</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>1A7C11</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.diskusage[{$CONTAINER_NAME1}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>F63100</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.diskusage[{$CONTAINER_NAME2}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>0</drawtype>
                    <color>2774A4</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.diskusage[{$CONTAINER_NAME3}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <drawtype>0</drawtype>
                    <color>A54F10</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.diskusage[{$CONTAINER_NAME4}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <drawtype>0</drawtype>
                    <color>FC6EA3</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.diskusage[{$CONTAINER_NAME5}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <drawtype>0</drawtype>
                    <color>6C59DC</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.diskusage[{$CONTAINER_NAME6}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>6</sortorder>
                    <drawtype>0</drawtype>
                    <color>AC8C14</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.diskusage[{$CONTAINER_NAME7}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>7</sortorder>
                    <drawtype>0</drawtype>
                    <color>611F27</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.diskusage[{$CONTAINER_NAME8}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>8</sortorder>
                    <drawtype>0</drawtype>
                    <color>F230E0</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.diskusage[{$CONTAINER_NAME9}]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker containers memory usage</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>100.0000</yaxismax>
            <show_work_period>1</show_work_period>
            <show_triggers>1</show_triggers>
            <type>0</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>1A7C11</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.memusage[{$CONTAINER_NAME1}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>F63100</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.memusage[{$CONTAINER_NAME2}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>0</drawtype>
                    <color>2774A4</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.memusage[{$CONTAINER_NAME3}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <drawtype>0</drawtype>
                    <color>A54F10</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.memusage[{$CONTAINER_NAME4}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <drawtype>0</drawtype>
                    <color>FC6EA3</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.memusage[{$CONTAINER_NAME5}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <drawtype>0</drawtype>
                    <color>6C59DC</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.memusage[{$CONTAINER_NAME6}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>6</sortorder>
                    <drawtype>0</drawtype>
                    <color>AC8C14</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.memusage[{$CONTAINER_NAME7}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>7</sortorder>
                    <drawtype>0</drawtype>
                    <color>611F27</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.memusage[{$CONTAINER_NAME8}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>8</sortorder>
                    <drawtype>0</drawtype>
                    <color>F230E0</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.memusage[{$CONTAINER_NAME9}]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Docker containers network usage</name>
            <width>900</width>
            <height>400</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>100.0000</yaxismax>
            <show_work_period>1</show_work_period>
            <show_triggers>1</show_triggers>
            <type>0</type>
            <show_legend>0</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>1A7C11</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netin[{$CONTAINER_NAME1}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>F63100</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netout[{$CONTAINER_NAME1}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>0</drawtype>
                    <color>2774A4</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netin[{$CONTAINER_NAME2}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <drawtype>0</drawtype>
                    <color>A54F10</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netout[{$CONTAINER_NAME2}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <drawtype>0</drawtype>
                    <color>FC6EA3</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netin[{$CONTAINER_NAME3}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <drawtype>0</drawtype>
                    <color>6C59DC</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netout[{$CONTAINER_NAME3}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>6</sortorder>
                    <drawtype>0</drawtype>
                    <color>AC8C14</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netin[{$CONTAINER_NAME4}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>7</sortorder>
                    <drawtype>0</drawtype>
                    <color>611F27</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netout[{$CONTAINER_NAME4}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>8</sortorder>
                    <drawtype>0</drawtype>
                    <color>F230E0</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netin[{$CONTAINER_NAME5}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>9</sortorder>
                    <drawtype>0</drawtype>
                    <color>5CCD18</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netout[{$CONTAINER_NAME5}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>10</sortorder>
                    <drawtype>0</drawtype>
                    <color>BB2A02</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netin[{$CONTAINER_NAME6}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>11</sortorder>
                    <drawtype>0</drawtype>
                    <color>5A2B57</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netout[{$CONTAINER_NAME6}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>12</sortorder>
                    <drawtype>0</drawtype>
                    <color>89ABF8</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netin[{$CONTAINER_NAME7}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>13</sortorder>
                    <drawtype>0</drawtype>
                    <color>7EC25C</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netout[{$CONTAINER_NAME7}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>14</sortorder>
                    <drawtype>0</drawtype>
                    <color>274482</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netin[{$CONTAINER_NAME8}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>15</sortorder>
                    <drawtype>0</drawtype>
                    <color>2B5429</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netout[{$CONTAINER_NAME8}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>16</sortorder>
                    <drawtype>0</drawtype>
                    <color>8048B4</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netin[{$CONTAINER_NAME9}]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>17</sortorder>
                    <drawtype>0</drawtype>
                    <color>FD5434</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Active Template App Docker v2</host>
                        <key>docker.netout[{$CONTAINER_NAME9}]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
    </graphs>
</zabbix_export>
