{%- if "awx" in nginx_default_sites -%}
  {%- set default_site = "default_server" -%}
{%- else -%}
  {%- set default_site = "" -%}
{%- endif -%}

map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
}

upstream awx_server {
		 server 127.0.0.1:{{ awx_host_port | default('8042', true) }};
}

server {

  {% if NGINX_ENABLE_SSL %}

  listen {{ awx_nginx_host_port }} {{ default_site }};
  listen {{ awx_nginx_host_port_ssl }} {{ default_site }} ssl;

  ssl_certificate {{ awx_ssl_certificate }};
  ssl_certificate_key {{ awx_ssl_certificate }};

  {% else %}
  listen {{ awx_nginx_host_port }} {{ default_site }};
  {% endif %}
  
  # Nginx does not support nested condition or or conditions so
  # there is an unfortunate mix of conditonals here.
  {% if NGINX_REDIRECT_TO_HTTPS %}
     {% if NGINX_HTTPS_REDIRECT_STRATEGY == "scheme" %}
  # Redirect http to https over single instance
  if ($scheme != "https") 
  { 
   set $do_redirect_to_https "true";
  }

     {% elif NGINX_HTTPS_REDIRECT_STRATEGY == "forward_for_proto" %}

  # Forward to HTTPS if we're an HTTP request... and the server is behind ELB 
  if ($http_x_forwarded_proto = "http") 
  {
   set $do_redirect_to_https "true";
  }
  {% endif %}

  # Execute the actual redirect
  if ($do_redirect_to_https = "true")
  {
  return 301 https://$host$request_uri;
  }
  {% endif %}
  
  server_name {{ awx_http_hostname }};

  client_max_body_size 50m;

  location '/.well-known/acme-challenge' {
    allow all;
    default_type "text/plain";
    root /var/www/letsencrypt;
  }

  location / {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_read_timeout 120;
	  proxy_redirect off;
	  proxy_pass http://awx_server;
    }
}
